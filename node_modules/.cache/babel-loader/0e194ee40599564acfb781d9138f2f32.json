{"ast":null,"code":"import _regeneratorRuntime from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(favoriteSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(saveRecipe),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getFavorites),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteFavorite),\n    _marked5 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(editNote);\n\nimport { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction favoriteSaga() {\n  return _regeneratorRuntime.wrap(function favoriteSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery('SAVE_RECIPE', saveRecipe);\n\n        case 2:\n          _context.next = 4;\n          return takeEvery('GET_FAVORITES', getFavorites);\n\n        case 4:\n          _context.next = 6;\n          return takeEvery('DELETE_FAVORITE', deleteFavorite);\n\n        case 6:\n          _context.next = 8;\n          return takeEvery('EDIT_NOTE', editNote);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction saveRecipe(action) {\n  return _regeneratorRuntime.wrap(function saveRecipe$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios.post(\"/favorites\", {\n            recipe: action.payload.recipe,\n            user: action.payload.user\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction getFavorites(action) {\n  var id, response;\n  return _regeneratorRuntime.wrap(function getFavorites$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log(action.payload);\n          id = action.payload;\n          _context3.next = 4;\n          return axios.get(\"/favorites/?id=\".concat(id));\n\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return put({\n            type: 'SET_FAVORITES',\n            payload: response.data\n          });\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nfunction deleteFavorite(action) {\n  var id, food_id, response;\n  return _regeneratorRuntime.wrap(function deleteFavorite$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          console.log('ready to delete', action.payload);\n          id = action.payload.user;\n          food_id = action.payload.recipe.id;\n          _context4.next = 5;\n          return axios.delete(\"/favorites/\".concat(food_id));\n\n        case 5:\n          response = _context4.sent;\n          _context4.next = 8;\n          return put({\n            type: 'GET_FAVORITES',\n            payload: id\n          });\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction editNote(action) {\n  var user_id, response;\n  return _regeneratorRuntime.wrap(function editNote$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          console.log('ready to edit the note on this recipe', action.payload);\n          user_id = action.payload.user_id; //let food_id = action.payload.food_id\n\n          _context5.next = 4;\n          return axios.put(\"/favorites/\", action.payload);\n\n        case 4:\n          response = _context5.sent;\n          _context5.next = 7;\n          return put({\n            type: 'GET_FAVORITES',\n            payload: user_id\n          });\n\n        case 7:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nexport default favoriteSaga;","map":{"version":3,"sources":["/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/redux/sagas/favorites.js"],"names":["favoriteSaga","saveRecipe","getFavorites","deleteFavorite","editNote","put","takeEvery","axios","action","post","recipe","payload","user","console","log","id","get","response","type","data","food_id","delete","user_id"],"mappings":";;;;yBAGUA,Y;;;yBAOAC,U;;;yBAKAC,Y;;;yBAOAC,c;;;yBAQAC,Q;;AA9BV,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAAUP,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMM,SAAS,CAAE,aAAF,EAAiBL,UAAjB,CAAf;;AADJ;AAAA;AAEI,iBAAMK,SAAS,CAAE,eAAF,EAAmBJ,YAAnB,CAAf;;AAFJ;AAAA;AAGI,iBAAMI,SAAS,CAAE,iBAAF,EAAqBH,cAArB,CAAf;;AAHJ;AAAA;AAII,iBAAMG,SAAS,CAAE,WAAF,EAAeF,QAAf,CAAf;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUH,UAAV,CAAqBO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMD,KAAK,CAACE,IAAN,eAAyB;AAAEC,YAAAA,MAAM,EAAEF,MAAM,CAACG,OAAP,CAAeD,MAAzB;AAAiCE,YAAAA,IAAI,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAAtD,WAAzB,CAAN;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,SAAUV,YAAV,CAAuBM,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIK,UAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,OAAnB;AACII,UAAAA,EAFR,GAEaP,MAAM,CAACG,OAFpB;AAAA;AAGmB,iBAAMJ,KAAK,CAACS,GAAN,0BAA4BD,EAA5B,EAAN;;AAHnB;AAGQE,UAAAA,QAHR;AAAA;AAII,iBAAMZ,GAAG,CAAC;AAAEa,YAAAA,IAAI,EAAE,eAAR;AAAyBP,YAAAA,OAAO,EAAEM,QAAQ,CAACE;AAA3C,WAAD,CAAT;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOA,SAAUhB,cAAV,CAAyBK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIK,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,MAAM,CAACG,OAAtC;AACII,UAAAA,EAFR,GAEaP,MAAM,CAACG,OAAP,CAAeC,IAF5B;AAGQQ,UAAAA,OAHR,GAGkBZ,MAAM,CAACG,OAAP,CAAeD,MAAf,CAAsBK,EAHxC;AAAA;AAImB,iBAAMR,KAAK,CAACc,MAAN,sBAA2BD,OAA3B,EAAN;;AAJnB;AAIQH,UAAAA,QAJR;AAAA;AAKI,iBAAMZ,GAAG,CAAC;AAACa,YAAAA,IAAI,EAAE,eAAP;AAAwBP,YAAAA,OAAO,EAAEI;AAAjC,WAAD,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQA,SAAUX,QAAV,CAAmBI,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACIK,UAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDN,MAAM,CAACG,OAA5D;AACIW,UAAAA,OAFR,GAEkBd,MAAM,CAACG,OAAP,CAAeW,OAFjC,EAGI;;AAHJ;AAImB,iBAAMf,KAAK,CAACF,GAAN,gBAAyBG,MAAM,CAACG,OAAhC,CAAN;;AAJnB;AAIQM,UAAAA,QAJR;AAAA;AAKI,iBAAMZ,GAAG,CAAE;AAACa,YAAAA,IAAI,EAAE,eAAP;AAAwBP,YAAAA,OAAO,EAAEW;AAAjC,WAAF,CAAT;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOE,eAAetB,YAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* favoriteSaga() {\n    yield takeEvery ('SAVE_RECIPE', saveRecipe);\n    yield takeEvery ('GET_FAVORITES', getFavorites);\n    yield takeEvery ('DELETE_FAVORITE', deleteFavorite);\n    yield takeEvery ('EDIT_NOTE', editNote)\n}\n\nfunction* saveRecipe(action) {\n    yield axios.post(`/favorites`, { recipe: action.payload.recipe, user: action.payload.user})\n    \n}\n\nfunction* getFavorites(action) {\n    console.log(action.payload)\n    let id = action.payload\n    let response = yield axios.get(`/favorites/?id=${id}`)\n    yield put({ type: 'SET_FAVORITES', payload: response.data })\n}\n\nfunction* deleteFavorite(action) {\n    console.log('ready to delete', action.payload)\n    let id = action.payload.user\n    let food_id = action.payload.recipe.id\n    let response = yield axios.delete(`/favorites/${food_id}`);\n    yield put({type: 'GET_FAVORITES', payload: id})\n}\n\nfunction* editNote(action) {\n    console.log('ready to edit the note on this recipe', action.payload)\n    let user_id = action.payload.user_id\n    //let food_id = action.payload.food_id\n    let response = yield axios.put(`/favorites/`, action.payload)\n    yield put ({type: 'GET_FAVORITES', payload: user_id})\n}\n  export default favoriteSaga\n"]},"metadata":{},"sourceType":"module"}