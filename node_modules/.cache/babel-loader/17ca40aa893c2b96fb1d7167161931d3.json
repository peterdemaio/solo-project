{"ast":null,"code":"import _defineProperty from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/components/LoginPage/LoginPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar LoginPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginPage, _Component);\n\n  function LoginPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      password: ''\n    };\n\n    _this.login = function (event) {\n      event.preventDefault();\n\n      if (_this.state.username && _this.state.password) {\n        _this.props.dispatch({\n          type: 'LOGIN',\n          payload: {\n            username: _this.state.username,\n            password: _this.state.password\n          }\n        });\n      } else {\n        _this.props.dispatch({\n          type: 'LOGIN_INPUT_ERROR'\n        });\n      }\n    };\n\n    _this.handleInputChangeFor = function (propertyName) {\n      return function (event) {\n        _this.setState(_defineProperty({}, propertyName, event.target.value));\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.errors.loginMessage && React.createElement(\"h2\", {\n        className: \"alert\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.errors.loginMessage), React.createElement(\"form\", {\n        onSubmit: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Login\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Username:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.handleInputChangeFor('username'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Password:\", React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.handleInputChangeFor('password'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"log-in\",\n        type: \"submit\",\n        name: \"submit\",\n        value: \"Log In\",\n        to: \"/preferences\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"link-button\",\n        onClick: function onClick() {\n          _this2.props.dispatch({\n            type: 'SET_TO_REGISTER_MODE'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Register\")));\n    }\n  }]);\n\n  return LoginPage;\n}(Component); // Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps)(LoginPage);","map":{"version":3,"sources":["/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/components/LoginPage/LoginPage.js"],"names":["React","Component","connect","LoginPage","state","username","password","login","event","preventDefault","props","dispatch","type","payload","handleInputChangeFor","propertyName","setState","target","value","errors","loginMessage","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,K,GAAQ,UAACC,KAAD,EAAW;AACjBA,MAAAA,KAAK,CAACC,cAAN;;AAEA,UAAI,MAAKL,KAAL,CAAWC,QAAX,IAAuB,MAAKD,KAAL,CAAWE,QAAtC,EAAgD;AAC9C,cAAKI,KAAL,CAAWC,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE,OADY;AAElBC,UAAAA,OAAO,EAAE;AACPR,YAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWC,QADd;AAEPC,YAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE;AAFd;AAFS,SAApB;AAQD,OATD,MASO;AACL,cAAKI,KAAL,CAAWC,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAApB;AACD;AACF,K;;UAEDE,oB,GAAuB,UAAAC,YAAY;AAAA,aAAI,UAACP,KAAD,EAAW;AAChD,cAAKQ,QAAL,qBACGD,YADH,EACkBP,KAAK,CAACS,MAAN,CAAaC,KAD/B;AAGD,OAJkC;AAAA,K;;;;;;;6BAM1B;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKR,KAAL,CAAWS,MAAX,CAAkBC,YAAlB,IACC;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,KAAKV,KAAL,CAAWS,MAAX,CAAkBC,YAJrB,CAFJ,EASE;AAAM,QAAA,QAAQ,EAAE,KAAKb,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKS,oBAAL,CAA0B,UAA1B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAFF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,QAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKQ,oBAAL,CAA0B,UAA1B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAbF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,IAAI,EAAC,QAHP;AAIE,QAAA,KAAK,EAAC,QAJR;AAKE,QAAA,EAAE,EAAC,cALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAxBF,CATF,EA2CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,aAFZ;AAGE,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACJ,KAAL,CAAWC,QAAX,CAAoB;AAACC,YAAAA,IAAI,EAAE;AAAP,WAApB;AAAoD,SAHtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CA3CF,CADF;AAuDD;;;;EArFqBX,S,GAwFxB;AACA;AACA;;;AACA,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAjB,KAAK;AAAA,SAAK;AAChCe,IAAAA,MAAM,EAAEf,KAAK,CAACe;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAejB,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,SAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.errors.loginMessage && (\n          <h2\n            className=\"alert\"\n            role=\"alert\"\n          >\n            {this.props.errors.loginMessage}\n          </h2>\n        )}\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              className=\"log-in\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n              to=\"/preferences\"\n            />\n          </div>\n        </form>\n        <center>\n          <button\n            type=\"button\"\n            className=\"link-button\"\n            onClick={() => {this.props.dispatch({type: 'SET_TO_REGISTER_MODE'})}}\n          >\n            Register\n          </button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n"]},"metadata":{},"sourceType":"module"}