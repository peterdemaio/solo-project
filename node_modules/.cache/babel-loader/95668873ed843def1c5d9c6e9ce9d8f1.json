{"ast":null,"code":"import _regeneratorRuntime from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(searchSaga),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fireSearch);\n\nimport { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction searchSaga() {\n  return _regeneratorRuntime.wrap(function searchSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return takeEvery('SEARCH', fireSearch);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction fireSearch(action) {\n  var query, preferences, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, preference, text, i, response;\n\n  return _regeneratorRuntime.wrap(function fireSearch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log(action.payload);\n          query = action.payload.query;\n          preferences = [];\n          _iteratorNormalCompletion = true;\n          _didIteratorError = false;\n          _iteratorError = undefined;\n          _context2.prev = 6;\n\n          for (_iterator = action.payload.preferences[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            preference = _step.value;\n            preferences.push(preference.name);\n          }\n\n          _context2.next = 14;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](6);\n          _didIteratorError = true;\n          _iteratorError = _context2.t0;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.prev = 15;\n\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n\n        case 17:\n          _context2.prev = 17;\n\n          if (!_didIteratorError) {\n            _context2.next = 20;\n            break;\n          }\n\n          throw _iteratorError;\n\n        case 20:\n          return _context2.finish(17);\n\n        case 21:\n          return _context2.finish(14);\n\n        case 22:\n          text = '';\n\n          for (i = 0; i < preferences.length; i++) {\n            text += \"&health=\" + preferences[i];\n          } // start spinner here \n\n\n          _context2.next = 26;\n          return put({\n            type: 'START_SPINNER'\n          });\n\n        case 26:\n          _context2.next = 28;\n          return axios.get(\"/search/?q=\".concat(query, \"&health=\").concat(text));\n\n        case 28:\n          response = _context2.sent;\n          _context2.next = 31;\n          return console.log(response.data.hits);\n\n        case 31:\n          _context2.next = 33;\n          return put({\n            type: 'SET_RECIPES',\n            payload: response.data.hits\n          });\n\n        case 33:\n          _context2.next = 35;\n          return put({\n            type: 'STOP_SPINNER'\n          });\n\n        case 35:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[6, 10, 14, 22], [15,, 17, 21]]);\n}\n\nexport default searchSaga;","map":{"version":3,"sources":["/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/redux/sagas/searchSaga.js"],"names":["searchSaga","fireSearch","put","takeEvery","axios","action","console","log","payload","query","preferences","preference","push","name","text","i","length","type","get","response","data","hits"],"mappings":";;;;yBAIUA,U;;;yBAIAC,U;;AARV,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAAUJ,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAMG,SAAS,CAAE,QAAF,EAAYF,UAAZ,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUA,UAAV,CAAqBI,MAArB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACIC,UAAAA,KAFR,GAEgBJ,MAAM,CAACG,OAAP,CAAeC,KAF/B;AAGQC,UAAAA,WAHR,GAGsB,EAHtB;AAAA;AAAA;AAAA;AAAA;;AAII,2BAAuBL,MAAM,CAACG,OAAP,CAAeE,WAAtC,uHAAmD;AAA1CC,YAAAA,UAA0C;AAC/CD,YAAAA,WAAW,CAACE,IAAZ,CAAiBD,UAAU,CAACE,IAA5B;AACH;;AANL;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAOQC,UAAAA,IAPR,GAOe,EAPf;;AAQI,eAASC,CAAT,GAAW,CAAX,EAAcA,CAAC,GAAGL,WAAW,CAACM,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvCD,YAAAA,IAAI,IAAI,aAAWJ,WAAW,CAACK,CAAD,CAA9B;AACH,WAVL,CAWI;;;AAXJ;AAYI,iBAAMb,GAAG,CAAE;AACPe,YAAAA,IAAI,EAAE;AADC,WAAF,CAAT;;AAZJ;AAAA;AAemB,iBAAMb,KAAK,CAACc,GAAN,sBAAwBT,KAAxB,qBAAwCK,IAAxC,EAAN;;AAfnB;AAeQK,UAAAA,QAfR;AAAA;AAgBI,iBAAMb,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACC,IAAT,CAAcC,IAA1B,CAAN;;AAhBJ;AAAA;AAiBI,iBAAMnB,GAAG,CAAE;AACPe,YAAAA,IAAI,EAAE,aADC;AAEPT,YAAAA,OAAO,EAAEW,QAAQ,CAACC,IAAT,CAAcC;AAFhB,WAAF,CAAT;;AAjBJ;AAAA;AAsBI,iBAAMnB,GAAG,CAAE;AACPe,YAAAA,IAAI,EAAE;AADC,WAAF,CAAT;;AAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BA,eAAejB,UAAf","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* searchSaga() {\n    yield takeEvery ('SEARCH', fireSearch);\n    \n}\nfunction* fireSearch(action) {\n    console.log(action.payload)\n    let query = action.payload.query\n    let preferences = []\n    for (let preference of action.payload.preferences) {\n        preferences.push(preference.name)\n    }\n    let text = ''\n    for (let i=0; i < preferences.length; i++) {\n        text += \"&health=\"+preferences[i]\n    }\n    // start spinner here \n    yield put ({ \n        type: 'START_SPINNER'\n    })\n    let response = yield axios.get(`/search/?q=${query}&health=${text}`)\n    yield console.log(response.data.hits)\n    yield put ({\n        type: 'SET_RECIPES',\n        payload: response.data.hits\n        })\n    //end spinner\n    yield put ({ \n        type: 'STOP_SPINNER'\n    })\n}\n\nexport default searchSaga"]},"metadata":{},"sourceType":"module"}