{"ast":null,"code":"import _defineProperty from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/components/SearchResultItem/SearchResultItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport Link from '@material-ui/core/Link';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport './SearchResultsItem.css';\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"up\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nvar styles = function styles(theme) {\n  return {\n    card: {\n      maxWidth: 400,\n      maxHeight: 600,\n      overflow: 'auto'\n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%' // 16:9\n\n    },\n    actions: {\n      display: 'flex'\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n\nvar SearchResultsItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchResultsItem, _React$Component);\n\n  function SearchResultsItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchResultsItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchResultsItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      expanded: false,\n      favorited: false,\n      open: false\n    };\n\n    _this.handleExpandClick = function () {\n      _this.setState(function (state) {\n        return {\n          expanded: !state.expanded\n        };\n      });\n    };\n\n    _this.handleFavorite = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleCloseYes = function () {\n      _this.setState({\n        open: false\n      });\n\n      _this.favorite();\n    };\n\n    _this.handleCloseNo = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.favorite = function () {\n      _this.props.dispatch({\n        type: 'SAVE_RECIPE',\n        payload: {\n          recipe: _this.props.recipe.recipe,\n          user: _this.props.reduxStore.user.id\n        }\n      });\n\n      _this.setState(function (state) {\n        return {\n          favorited: !state.favorited\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchResultsItem, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"li\", {\n        className: \"recipeListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        className: \"cardHeader\",\n        title: this.props.recipe.recipe.label,\n        subheader: this.props.recipe.recipe.source,\n        action: React.createElement(IconButton, {\n          \"aria-label\": \"Add to favorites\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, this.state.favorited === false ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(FavoriteBorderOutlinedIcon, {\n          onClick: this.handleFavorite,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }), React.createElement(Dialog, {\n          open: this.state.open,\n          TransitionComponent: Transition,\n          keepMounted: true,\n          onClose: this.handleClose,\n          \"aria-labelledby\": \"alert-dialog-slide-title\",\n          \"aria-describedby\": \"alert-dialog-slide-description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(DialogTitle, {\n          id: \"alert-dialog-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"Add to Favorites?\"), React.createElement(DialogActions, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(Button, {\n          onClick: this.handleCloseNo,\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Go Back\"), React.createElement(Button, {\n          onClick: this.handleCloseYes,\n          color: \"primary\",\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, \"Yes!\")))) : React.createElement(FavoriteOutlinedIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(CardMedia, {\n        className: classes.media,\n        image: this.props.recipe.recipe.image,\n        title: this.props.recipe.recipe.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Click down arrow to see ingredients list and heart to save to favorites\"), React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: this.props.recipe.recipe.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"View recipe on site\"))), React.createElement(CardActions, {\n        className: classes.actions,\n        disableActionSpacing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Ingredients\"), React.createElement(IconButton, {\n        className: classnames(classes.expand, _defineProperty({}, classes.expandOpen, this.state.expanded)),\n        onClick: this.handleExpandClick,\n        \"aria-expanded\": this.state.expanded,\n        \"aria-label\": \"Show more\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(Collapse, {\n        in: this.state.expanded,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        className: \"ingredientsList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.props.recipe.recipe.ingredientLines.map(function (item) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          className: \"ingredientsListItem\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, item));\n      }))))));\n    }\n  }]);\n\n  return SearchResultsItem;\n}(React.Component);\n\nSearchResultsItem.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(reduxStore) {\n  return {\n    reduxStore: reduxStore\n  };\n};\n\nvar styledViewCard = withStyles(styles)(SearchResultsItem);\nexport default connect(mapStateToProps)(styledViewCard);","map":{"version":3,"sources":["/Users/peterdemaio/Prime/tier3/Solo-Project-2.0/src/components/SearchResultItem/SearchResultItem.jsx"],"names":["React","PropTypes","withStyles","classnames","Card","CardHeader","CardMedia","CardContent","CardActions","Collapse","IconButton","Typography","red","FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","ExpandMoreIcon","connect","Link","Dialog","DialogActions","DialogTitle","Slide","Button","Transition","props","styles","theme","card","maxWidth","maxHeight","overflow","media","height","paddingTop","actions","display","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","SearchResultsItem","state","expanded","favorited","open","handleExpandClick","setState","handleFavorite","handleCloseYes","favorite","handleCloseNo","dispatch","type","payload","recipe","user","reduxStore","id","classes","label","source","handleClose","image","url","ingredientLines","map","item","Component","propTypes","object","isRequired","mapStateToProps","styledViewCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport red from '@material-ui/core/colors/red';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport FavoriteOutlinedIcon from '@material-ui/icons/FavoriteOutlined';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { connect } from 'react-redux';\nimport Link from '@material-ui/core/Link';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport './SearchResultsItem.css'\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 400,\n        maxHeight: 600,\n        overflow: 'auto'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    actions: {\n        display: 'flex',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n});\n\nclass SearchResultsItem extends React.Component {\n\n    state = {\n        expanded: false,\n        favorited: false,\n        open: false,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    handleFavorite = () => {\n        this.setState({ open: true });\n    };\n\n    handleCloseYes = () => {\n        this.setState({ open: false });\n        this.favorite()\n    };\n    handleCloseNo = () => {\n        this.setState({ open: false });\n    };\n\n    favorite = () => {\n\n        this.props.dispatch({\n            type: 'SAVE_RECIPE',\n            payload: {\n                recipe: this.props.recipe.recipe,\n                user: this.props.reduxStore.user.id\n            }\n        })\n\n        this.setState(state => ({ favorited: !state.favorited }))\n\n    }\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <li className=\"recipeListItem\">\n                <Card className={classes.card}>\n                    <CardHeader\n                        className=\"cardHeader\"\n                        title={this.props.recipe.recipe.label}\n                        subheader={this.props.recipe.recipe.source}\n                        action={\n                            <IconButton aria-label=\"Add to favorites\">\n                                {this.state.favorited === false ?\n                                    <div>\n                                        <FavoriteBorderOutlinedIcon onClick={this.handleFavorite} />\n                                        <Dialog\n                                            open={this.state.open}\n                                            TransitionComponent={Transition}\n                                            keepMounted\n                                            onClose={this.handleClose}\n                                            aria-labelledby=\"alert-dialog-slide-title\"\n                                            aria-describedby=\"alert-dialog-slide-description\"\n                                        >\n                                            <DialogTitle id=\"alert-dialog-title\">{\"Add to Favorites?\"}</DialogTitle>\n                                            <DialogActions>\n                                                <Button onClick={this.handleCloseNo} color=\"primary\">\n                                                    Go Back\n                                    </Button>\n                                                <Button onClick={this.handleCloseYes} color=\"primary\" autoFocus>\n                                                    Yes!\n                                    </Button>\n                                            </DialogActions>\n                                        </Dialog>\n                                    </div> :\n                                    <FavoriteOutlinedIcon />\n                                }\n                            </IconButton>\n                        }\n                    />\n                    <CardMedia\n                        className={classes.media}\n                        image={this.props.recipe.recipe.image}\n                        title={this.props.recipe.recipe.label}\n                    />\n                    <CardContent>\n                        <Typography component=\"p\">\n                            Click down arrow to see ingredients list and heart to save to favorites\n                            </Typography>\n                        <Typography>\n                            <Link href={this.props.recipe.recipe.url} target=\"_blank\" >\n                                View recipe on site\n                                </Link>\n                        </Typography>\n                    </CardContent>\n                    <CardActions className={classes.actions} disableActionSpacing>\n                            <h2>Ingredients</h2>\n                        <IconButton\n                            className={classnames(classes.expand, {\n                                [classes.expandOpen]: this.state.expanded,\n                            })}\n                            onClick={this.handleExpandClick}\n                            aria-expanded={this.state.expanded}\n                            aria-label=\"Show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    </CardActions>\n                    <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                        <CardContent className=\"ingredientsList\">\n                            <ul>\n                                {this.props.recipe.recipe.ingredientLines.map(item =>\n                                    <li>\n                                        <Typography className=\"ingredientsListItem\">{item}</Typography>\n                                    </li>\n                                )}\n                            </ul>\n                        </CardContent>\n                    </Collapse>\n                </Card>\n            </li>\n        )\n    }\n}\n\nSearchResultsItem.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    reduxStore\n})\n\nlet styledViewCard = withStyles(styles)(SearchResultsItem);\n\nexport default connect(mapStateToProps)(styledViewCard)"]},"metadata":{},"sourceType":"module"}